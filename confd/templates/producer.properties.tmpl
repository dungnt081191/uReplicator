# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# see kafka.producer.ProducerConfig for more details

############################# Producer Basics #############################

# list of brokers used for bootstrapping knowledge about the rest of the cluster
# format: host1:port1,host2:port2 ...
bootstrap.servers={{ getenv "DST_KF_CONNECT" }}
#test : kafka-1-dev.vinid.dev:9092,kafka-2-dev.vinid.dev:9092,
client.id={{ getenv "CONSUMER_GROUP_ID" }}

# name of the partitioner class for partitioning events; default partition spreads data randomly
#partitioner.class=

# specifies whether the messages are sent asynchronously (async) or synchronously (sync)
producer.type=async

# specify the compression codec for all data generated: none, gzip, snappy, lz4.
# the old config values work as well: 0, 1, 2, 3 for none, gzip, snappy, lz4, respectively
compression.type=none

# message encoder
key.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer

batch.size=262144
linger.ms=1000
buffer.memory=167772160
send.buffer.bytes=62914560
delivery.timeout.ms=600000
request.timeout.ms=30000
#max.in.flight.requests.per.connection=5
#max.request.size=31457280
queue.buffering.max.messages={{ getenv "QUEUE_BUFFERING_MAX_MESSAGES" }}
max.in.flight.requests.per.connection={{ getenv "MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION" }}
max.request.size={{ getenv "MAX_REQUEST_SIZE" }}

#SSL
security.protocol=SSL
ssl.truststore.location={{ getenv "PRD_KAFKA_TRUSTSTORE_LOCATION" }}
ssl.truststore.password={{ getenv "PRD_KAFKA_TRUSTSTORE_PASSWORD" }}
#manager KAFKA_CLIENT_LOCATION
ssl.keystore.location={{ getenv "PRD_KAFKA_CLIENT_LOCATION" }}
ssl.keystore.password={{ getenv "PRD_KAFKA_CLIENT_PASSWORD" }}
ssl.key.password={{ getenv "PRD_KAFKA_CLIENT_PASSWORD" }}